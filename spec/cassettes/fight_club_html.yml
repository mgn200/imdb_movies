---
http_interactions:
- request:
    method: get
    uri: http://imdb.com/title/tt0137523/?ref_=chttp_tt_10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Date:
      - Mon, 06 Nov 2017 19:05:24 GMT
      Server:
      - Server
      Location:
      - http://www.imdb.com/title/tt0137523/?ref_=chttp_tt_10
      Content-Length:
      - '261'
      Cneonction:
      - close
      Content-Type:
      - text/html; charset=iso-8859-1
    body:
      encoding: UTF-8
      string: |
        <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
        <html><head>
        <title>301 Moved Permanently</title>
        </head><body>
        <h1>Moved Permanently</h1>
        <p>The document has moved <a href="http://www.imdb.com/title/tt0137523/?ref_=chttp_tt_10">here</a>.</p>
        </body></html>
    http_version: 
  recorded_at: Mon, 06 Nov 2017 19:05:24 GMT
- request:
    method: get
    uri: http://www.imdb.com/title/tt0137523/?ref_=chttp_tt_10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 06 Nov 2017 19:05:26 GMT
      Server:
      - Server
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Type:
      - text/html;charset=UTF-8
      Content-Language:
      - en-US
      Vary:
      - Accept-Encoding,User-Agent
      Set-Cookie:
      - session-id-time=2140715125; Domain=.imdb.com; Expires=Sat, 24-Nov-2085 22:19:33
        GMT; Path=/
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Sat, 24-Nov-2085
        22:19:33 GMT; Path=/
      - uu=BCYns2lAZV-FQPHJ7Xf6j00VWXzhImsGOzVP0zYaV5-X2QKeBVKbOkUH1h2xQ-pGSK54ULyRLs8y%0D%0AUbZPNxTHT8GlRxOyNKYk0Pk9-gFHuiP4Zjtce7dS7h1lSRxNrtfk9US0gIwoAZCjqtGpQtqUqLx7%0D%0A1lFc8fgn8Z_OUzocB-ICC9jn_EDZyyMY-9RYecnRbrErLXQIOTkVwCXnsrwqhZxsClX3gwZ1cUgp%0D%0AqXloZyGyv-XMU9yRIfLeHdMS8EuqFmCAFkiWbJ6XyLyUXqiWzw2dZA%0D%0A;
        Domain=.imdb.com; Expires=Sat, 24-Nov-2085 22:19:33 GMT; Path=/
      P3p:
      - policyref="http://i.imdb.com/images/p3p.xml",CP="CAO DSP LAW CUR ADM IVAo
        IVDo CONo OTPo OUR DELi PUBi OTRi BUS PHY ONL UNI PUR FIN COM NAV INT DEM
        CNT STA HEA PRE LOC GOV OTC "
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Mon, 06 Nov 2017 19:05:26 GMT
recorded_with: VCR 3.0.3
